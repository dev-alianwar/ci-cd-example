name: Update Version and Tag

on:
  workflow_call:
    secrets:
      ACCESS_TOKEN:
        required: true

jobs:
  update_version_and_tag:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '20'

    - name: Install jq
      run: sudo apt-get install -y jq

    - name: Read current version from package.json
      id: read_version
      run: |
        current_version=$(jq -r '.version' package.json)
        echo "current_version=$current_version" >> $GITHUB_ENV

    - name: Determine new version
      id: determine_version
      run: |
        IFS='.' read -r major minor patch <<< "${{ env.current_version }}"
        new_patch=$((patch + 1))
        new_version="$major.$minor.$new_patch"
        echo "new_version=$new_version" >> $GITHUB_ENV
      env:
        current_version: ${{ env.current_version }}

    - name: Update package.json version
      run: |
        jq --arg new_version "$new_version" '.version = $new_version' package.json > package.tmp.json && mv package.tmp.json package.json
      env:
        new_version: ${{ env.new_version }}

    - name: Commit version update
      env:
        ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN }}
        new_version: ${{ env.new_version }}
      run: |
        git config --global user.name "github-actions[bot]"
        git config --global user.email "github-actions[bot]@users.noreply.github.com"
        git add package.json
        git commit -m "chore: bump version to $new_version"
        git push

    - name: Create GitHub tag
      env:
        ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN }}
        new_version: ${{ env.new_version }}
      run: |
        git tag "v${new_version}"
        git push origin "v${new_version}"
