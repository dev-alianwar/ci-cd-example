name: Update Version on Release Branch Merge

on:
  push:
    branches:
      - master

jobs:
  update-version:
    if: ${{ startsWith(github.event.head_commit.message, 'Merge branch \'release/') }}
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '14'

    - name: Get the latest tag
      id: get_latest_tag
      run: |
        LATEST_TAG=$(git describe --tags $(git rev-list --tags --max-count=1))
        echo "::set-output name=latest_tag::$LATEST_TAG"

    - name: Extract and increment major version number
      id: extract_version
      run: |
        VERSION=${{ steps.get_latest_tag.outputs.latest_tag }}
        # Extract major, minor, and patch numbers
        IFS='.' read -r -a VERSION_PARTS <<< "$VERSION"
        MAJOR=${VERSION_PARTS[0]}
        # Increment major version and reset minor and patch to 0
        MAJOR=$((MAJOR + 1))
        NEW_VERSION="$MAJOR.0.0"
        echo "New version: $NEW_VERSION"
        echo "::set-output name=new_version::$NEW_VERSION"

    - name: Update package.json with new version
      run: |
        NEW_VERSION=${{ steps.extract_version.outputs.new_version }}
        npm version $NEW_VERSION --no-git-tag-version

    - name: Commit updated package.json
      run: |
        git config --global user.name 'github-actions[bot]'
        git config --global user.email 'github-actions[bot]@users.noreply.github.com'
        git add package.json
        git commit -m "Bump version to ${{ steps.extract_version.outputs.new_version }}"

    - name: Push changes
      run: |
        git push origin master

    - name: Create new tag
      run: |
        NEW_VERSION=${{ steps.extract_version.outputs.new_version }}
        git tag $NEW_VERSION
        git push origin $NEW_VERSION
